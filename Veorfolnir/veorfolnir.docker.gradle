import de.gesellix.gradle.docker.tasks.*
import static groovy.json.JsonOutput.prettyPrint
import static groovy.json.JsonOutput.toJson

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "de.gesellix:gradle-docker-plugin:+"
    }
}

ext {
  imgName = "frank0631/veorfolnir"
  repoName = "frank0631/veorfolnir"
  containName = "Veorfolnir"
  mongoPort = 27017
  exposePort = 27017
}

docker {
    dockerHost = localDockerHost
}

task rmImage(type: DockerRmiTask) {
    imageId = imgName
}

task buildImage(type: DockerBuildTask) {
    dependsOn rmImage
    imageName = imgName
    buildContextDirectory = file(".")
}

task stopContainer(type: DockerStopTask) {
    dependsOn buildImage
    containerId = containName
}

task rmContainer(type: DockerRmTask) {
    dependsOn stopContainer
    containerId = containName
}

task runContainer(type: DockerRunTask) {
    dependsOn buildImage, rmContainer
    dockerHost = localDockerHost
    imageName = imgName
    containerName = containName
    containerConfiguration = [
      "ExposedPorts": ["$mongoPort/tcp": [:]],
      "HostConfig"  : [
          "PortBindings": ["$mongoPort/tcp": [["HostPort": "$exposePort"]]]]]
}

task pushImage(type: DockerPushTask) {
  repositoryName = repoName
  authConfigPlain = getDockerClient().readAuthConfig(registryHostname, dockerCfgFilename)
}

task pullImageOnRemoteServer(type: DockerPullTask) {
  dependsOn pushImage

  dockerHost = remoteDockerHost
  imageName = imgName
  registry = "hraesvelgr/64cefa1e-frank0631.node.tutum.io"
}
