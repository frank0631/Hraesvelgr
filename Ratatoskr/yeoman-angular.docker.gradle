import de.gesellix.gradle.docker.tasks.*
import static groovy.json.JsonOutput.prettyPrint
import static groovy.json.JsonOutput.toJson

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'de.gesellix:gradle-docker-plugin:2015-07-26T22-23-42'
    }
}

ext {
  imgName = "frank0631/ratatoskr"
  repoName = "frank0631/ratatoskr"
  containName = "Ratatoskr"
  appPort = 80
  hostPort = 80
}

docker {
    dockerHost = localDockerHost
}

task rmImage(type: DockerRmiTask) {
    imageId = imgName
}

task buildImage(type: DockerBuildTask) {
    dependsOn rmImage
    imageName = imgName
    buildContextDirectory = file("./docker/")
}

task stopContainer(type: DockerStopTask) {
    containerId = containName
}

task rmContainer(type: DockerRmTask) {
    dependsOn stopContainer
    containerId = containName
}

task runContainer(type: DockerRunTask) {
    dependsOn buildImage
    dependsOn rmContainer
    dockerHost = localDockerHost
    imageName = imgName
    containerName = containName
    containerConfiguration = [
            "ExposedPorts": ["$appPort/tcp": [:]],
            "HostConfig"  : [
                    "Links"       : ["Huginn:Hugg"],
                    "PortBindings": ["$appPort/tcp": [["HostPort": "$hostPort"]]]
            ]]
}

task copytoDocker()<<{

  delete fileTree(dir: "docker")

  copy{
    from '.'
    include 'Dockerfile'
    include 'Gruntfile.js','package.json','.bowerrc','bower.json'
    include 'proxy.conf','Ratatoskr.sh'
    into 'docker'
  }

  copy{
    from fileTree(dir: './dist')
    into 'docker/dist'
  }

}
//copytoDocker.dependsOn(gruntBuild)
buildImage.dependsOn(copytoDocker)

task pushImageToPrivateRepo(type: DockerPushTask) {
  repositoryName = repoName
  authConfigPlain = getDockerClient().readAuthConfig(registryHostname, dockerCfgFilename)
}
